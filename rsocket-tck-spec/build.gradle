plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id 'com.github.ben-manes.versions' version "$versions_updates_version"
}

apply plugin: "org.jetbrains.kotlin.jvm"

dependencies {
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version")

    implementation("io.strikt:strikt-core:$strikt_version") //assertion lib
    implementation(project(":rsocket-tck-core"))
    implementation("org.spekframework.spek2:spek-dsl-jvm:$spek_version")
    testRuntimeOnly("org.spekframework.spek2:spek-runner-junit5:$spek_version")
    testRuntimeOnly("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    implementation("io.netty:netty-buffer:$netty_version")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = [
                "-XXLanguage:+InlineClasses",
                "-Xuse-experimental=kotlin.time.ExperimentalTime"
        ]
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = [
                "-XXLanguage:+InlineClasses",
                "-Xuse-experimental=kotlin.time.ExperimentalTime"
        ]
    }
}

test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
    onlyIf {
        def travis = System.getenv("TRAVIS")
        travis == null || !travis.toBoolean()
    }
}
